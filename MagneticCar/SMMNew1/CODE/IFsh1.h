/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : IFsh1.H
**     Project   : SMMNew1
**     Processor : 56F8013VFAE
**     Component : IntFLASH
**     Version   : Component 02.362, Driver 02.07, CPU db: 2.87.097
**     Compiler  : Metrowerks DSP C Compiler
**     Date/Time : 2012-2-6, 8:06
**     Abstract  :
**         This bean "IntFLASH" implements an access to internal FLASH.
**         The bean support reading/writing data into FLASH, erasing of
**         selected sector.
**         The bean supports events if the write interrupt is supported.
**         The bean supports following modes of write operations:
**           - Write - writing without any test.
**           - Destructive write - sector is erased if necessary.
**           - Safe write - user event is invoked to save and resore data
**                          from the current sector.
**         The bean requires on-chip FLASH memory (not used/allocated by
**         other beans).
**     Settings  :
**         FLASH memory type                 : Program FLASH
**         Memory size                       : 8192 words
**         Sector size                       : 256 words
**         Interrupt service                 : Disabled
**         Write method                      : Safe write (with save & erase)
**         Buffer Type                       : Implemented by the bean
**         Wait in RAM                       : yes
**     Contents  :
**         Busy         - bool IFsh1_Busy(byte Block);
**         SetByteFlash - byte IFsh1_SetByteFlash(IFsh1_TAddress Addr, byte Data);
**         SetWordFlash - byte IFsh1_SetWordFlash(IFsh1_TAddress Addr, word Data);
**         DataPtr2Addr - IFsh1_TAddress IFsh1_DataPtr2Addr(void* Addr);
**         FuncPtr2Addr - IFsh1_TAddress IFsh1_FuncPtr2Addr(void(*Addr)());
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __IFsh1
#define __IFsh1

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"

/* Include inherited beans */
#include "Cpu.h"

/* MODULE IFsh1. */

/* FLASH memory size and location in 16-bit words */
#define PROG_FLASH_START 0
#define PROG_FLASH_END   8191
#define PROG_FLASH_SECTOR_SIZE 256u

/* Common data fields for all IntFLASH bean's modules */
#ifndef CommonFlashData
#define CommonFlashData

/* Flash user mode commands */
#define ERASE_VERIFY 0x05
#define PROGRAM      0x20
#define PAGE_ERASE   0x40
#define MASS_ERASE   0x41

#endif /* Common data fields for all IntFLASH bean's modules */

#ifndef __BWUserType_IFsh1_TAddress
#define __BWUserType_IFsh1_TAddress
   typedef dword IFsh1_TAddress;       /* Bean type for address to the FLASH.*/
#endif
#ifndef __BWUserType_IFsh1_TDataAddress
#define __BWUserType_IFsh1_TDataAddress
  typedef dword IFsh1_TDataAddress;    /* Bean type for data address. */
#endif


/* Adressess for wait in RAM routine copy */
extern _LWIR_ROM_addr_low;
extern _LWIR_ROM_addr_high;
extern _LWIR_RAM_addr_low;
extern _LWIR_RAM_addr_high;
extern _LWIR_size;

/*
Test the Command complete flag.
*/
#define IFsh1_Busy(Block) ((bool)( \
  (getRegBit(FMUSTAT,CCIF)) ? \
    (FALSE) : \
    (TRUE)))
/*
** ===================================================================
**     Method      :  IFsh1_Busy (component IntFLASH)
**
**     Description :
**         Method return status of the FLASH device
**     Parameters  :
**         NAME            - DESCRIPTION
**         Block           - Block number. Not used for Freescale
**                           56800 and HCS12X derivates - any value may be passed.
**     Returns     :
**         ---             - TRUE/FALSE - FLASH is busy/ready
** ===================================================================
*/

byte IFsh1_SetByteFlash(IFsh1_TAddress Addr,byte Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetByteFlash (component IntFLASH)
**
**     Description :
**         Write byte to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**           Note: An address of the byte location is an 16-bit word
**                 location address multiplied by 2 and then the
**                 even/odd bytes are discriminated by LSB:
**                 0 for even byte, 1 for odd byte.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/

byte IFsh1_SetWordFlash(IFsh1_TAddress Addr,word Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetWordFlash (component IntFLASH)
**
**     Description :
**         Write word to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/

void IFsh1_Init(void);
/*
** ===================================================================
**     Method      :  IFsh1_Init (component IntFLASH)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

#define IFsh1_DataPtr2Addr(DataPtr) ((IFsh1_TAddress)(DataPtr))
/*
** ===================================================================
**     Method      :  IFsh1_DataPtr2Addr (component IntFLASH)
**
**     Description :
**         This method converts data pointer to format of a bean method
**         address parameter. Generally a data pointer format is
**         different from format of a method Addr parameter.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Addr            - Data pointer.
**     Returns     :
**         ---             - Address in the format used in the bean
**                           methods.
**                           Version specific information for 56800
**                           derivatives ] 
**                           The return value is address of a byte
**                           location of the object the input parameter
**                           - pointer pointing at (address of a 16 bit
**                           word location multiplied by 2 and the least
**                           significant bit determines even or odd byte).
** ===================================================================
*/

#define IFsh1_FuncPtr2Addr(FuncPtr) ((IFsh1_TAddress)(FuncPtr))
/*
** ===================================================================
**     Method      :  IFsh1_FuncPtr2Addr (component IntFLASH)
**
**     Description :
**         This method converts function pointer to format of a bean
**         method address parameter. Generally a function pointer
**         format is different from format of a method Addr parameter.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Addr            - Function pointer.
**     Returns     :
**         ---             - Address in the format used in the bean
**                           methods.
**                           Version specific information for 56800
**                           derivatives ] 
**                           The return value is address of a byte
**                           location of the object the input parameter
**                           - pointer pointing at (address of a 16 bit
**                           word location multiplied by 2 and the least
**                           significant bit determines even or odd byte).
** ===================================================================
*/

/* END IFsh1. */

#endif /* ifndef __IFsh1 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.00 [04.35]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
