=============================================================================
List of generated methods in project: SMMNew1

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "LED"       (bean BitIO)
   - LED_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - LED_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LED_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - LED_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.

Module "AS1"       (bean AsynchroSerial)
   - AS1_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read. Version specific 
                information for Freescale 56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU 
                and the receiver is configured to use DMA controller then this method only sets the selected DMA channel. Then 
                the status of the DMA transfer can be checked using GetCharsInRxBuf method. See an example of a typical usage 
                for details about the communication using DMA.
   - AS1_SendChar -Sends one character to the channel. If the component is temporarily disabled (Disable method) SendChar 
                method only stores data into an output buffer. In case of a zero output buffer size, only one character can be 
                stored. Enabling the component (Enable method) starts the transmission of the stored data. This method is 
                available only if the transmitter property is enabled.  Version specific information for Freescale 56800 
                derivatives ]   DMA mode:  If DMA controller is available on the selected CPU and the transmitter is configured 
                to use DMA controller then this method only sets selected DMA channel. Then the status of the DMA transfer can 
                be checked using GetCharsInTxBuf method. See an example of a typical usage for details about communication 
                using DMA.
   - AS1_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the receiver 
                property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If DMA 
                controller is available on the selected CPU and the receiver is configured to use DMA controller then this 
                method returns the number of characters in the receive buffer.
   - AS1_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if the 
                transmitter property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If 
                DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method returns the number of characters in the transmit buffer.

Module "AD1"       (bean ADC)
   - AD1_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_GetValue16 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.

Module "PWMC1"     (bean PWMMC)
   - PWMC1_SetDuty -Setting duty (value) register(s) of selected channel. The value is loaded after calling <Load> method.   
                Version specific information for Freescale 56800/E and HC08 and HCS12 and HCS12X derivatives ]   Setting is 
                valid for actual speed mode only, initial value is restored after speed mode change.   Version specific 
                information for Freescale HCS08 and ColdFireV1 derivatives  In center-align mode it is necessary to set both 
                odd and event duty registers separatelly. ]   Duty register(s) value is not affected during speed mode change. 
                It should be handled by the user code.   Version specific information for Freescale 56800/E derivatives - 
                eFlexPWM device ]   Duty register(s) value is not affected during speed mode change. It should be handled by 
                the user code.
   - PWMC1_Load -Apply last setting of the methods <SetDuty>, <SetDutyPercent>, both <SetRatio*>, <SetPeriod> and 
                <SetPrescaler>.   Version specific information for Freescale HCS08 and ColdFireV1 derivatives ]   On FTM 
                peripheral on HCS08 and ColdFireV1 derivatives, <SetPrescaler> is applied immediately and it is not affected by 
                this method.
   - PWMC1_SetRatio16 -This method sets a new duty-cycle ratio for selected channel. The value is loaded after calling <Load> 
                method.   Version specific information for Freescale 56800/E and HC08 and HCS12 and HCS12X derivatives ]   
                Setting is valid for actual speed mode only, initial value is restored after speed mode change.   Version 
                specific information for Freescale HCS08 and ColdFireV1 derivatives ]   Settings is not affected during speed 
                mode change. It should be handled by the user code.   Version specific information for Freescale 56800/E 
                derivatives - eFlexPWM device ]   Settings is not affected during speed mode change. It should be handled by 
                the user code.
   - PWMC1_SetRatio15 -This method sets a new duty-cycle ratio for selected channel. The value is loaded after calling <Load> 
                method.   Version specific information for Freescale 56800/E and HC08 and HCS12 and HCS12X derivatives ]   
                Setting is valid for actual speed mode only, initial value is restored after speed mode change.   Version 
                specific information for Freescale HCS08 and ColdFireV1 derivatives ]   Settings is not affected during speed 
                mode change. It should be handled by the user code.   Version specific information for Freescale 56800/E 
                derivatives - eFlexPWM device ]   Settings is not affected during speed mode change. It should be handled by 
                the user code.
   - PWMC1_OutputPadEnable -Method enables output pads.
   - PWMC1_OutputPadDisable -Method disables output pads.

Module "COUNTER1"  (bean EventCntr16)
   - COUNTER1_Reset -This method resets the external event counter (sets it to zero).
   - COUNTER1_GetNumEvents -This method returns the number of the external events.

Module "COUNTER2"  (bean EventCntr16)
   - COUNTER2_Reset -This method resets the external event counter (sets it to zero).
   - COUNTER2_GetNumEvents -This method returns the number of the external events.

Module "TI1"       (bean TimerInt)

Module "IFsh1"     (bean IntFLASH)
   - IFsh1_Busy -This method returns the status of the FLASH device. The method may be required and called from another 
                component methods - in this case it cannot be disabled.
   - IFsh1_SetByteFlash -Writes a byte to an address in FLASH. The operation of this method depends on the "Write method" 
                property and state of the flash. Please see more details on general info page of the help.
   - IFsh1_SetWordFlash -Writes a word to an address in FLASH. The operation of this method depends on the "Write method" 
                property and state of the flash. Please see more details on general info page of the help.
   - IFsh1_DataPtr2Addr -This method converts data pointer to format of a bean method address parameter. Generally a data 
                pointer format is different from format of a method Addr parameter.
   - IFsh1_FuncPtr2Addr -This method converts function pointer to format of a bean method address parameter. Generally a 
                function pointer format is different from format of a method Addr parameter.

Module "Cpu"       (bean 56F8013VFAE)
   - Cpu_EnableInt -Enables all maskable interrupts
   - Cpu_DisableInt -Disables all maskable interrupts
   - Cpu_SetWaitMode -Sets low power mode - Wait mode.  For more information about the wait mode see this CPU documentation.  
                Release from wait mode: Reset or interrupt
   - Cpu_SetStopMode -Sets low power mode - Stop mode.  For more information about the stop mode see this CPU documentation.

===================================================================================
